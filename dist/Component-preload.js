sap.ui.require.preload({
	"integrtr/platform/Component.js": "sap.ui.define([\"sap/ui/core/UIComponent\",\"sap/ui/core/ComponentSupport\"],function(e){\"use strict\";return e.extend(\"sap.ui.demo.todo.Component\",{metadata:{manifest:\"json\"}})});",
	"integrtr/platform/controller/App.controller.js": "sap.ui.define([\"sap/ui/Device\",\"sap/ui/core/mvc/Controller\",\"sap/ui/model/Filter\",\"sap/ui/model/FilterOperator\",\"sap/ui/model/json/JSONModel\"],function(e,t,i,s,r){\"use strict\";return t.extend(\"sap.ui.demo.todo.controller.App\",{onInit:function(){this.aSearchFilters=[],this.aTabFilters=[],this.getView().setModel(new r({isMobile:e.browser.mobile,filterText:void 0}),\"view\")},addTodo:function(){var e=this.getView().getModel(),t=e.getProperty(\"/todos\").map(function(e){return Object.assign({},e)});t.push({title:e.getProperty(\"/newTodo\"),completed:!1}),e.setProperty(\"/todos\",t),e.setProperty(\"/newTodo\",\"\")},clearCompleted:function(){for(var e=this.getView().getModel(),t=e.getProperty(\"/todos\").map(function(e){return Object.assign({},e)}),i=t.length;i--;){t[i].completed&&t.splice(i,1)}e.setProperty(\"/todos\",t)},updateItemsLeftCount:function(){var e=this.getView().getModel(),t=(e.getProperty(\"/todos\")||[]).filter(function(e){return!0!==e.completed}).length;e.setProperty(\"/itemsLeftCount\",t)},onSearch:function(e){var t=this.getView().getModel();if(this.aSearchFilters=[],this.sSearchQuery=e.getSource().getValue(),this.sSearchQuery&&this.sSearchQuery.length>0){t.setProperty(\"/itemsRemovable\",!1);var r=new i(\"title\",s.Contains,this.sSearchQuery);this.aSearchFilters.push(r)}else t.setProperty(\"/itemsRemovable\",!0);this._applyListFilters()},onFilter:function(e){switch(this.aTabFilters=[],this.sFilterKey=e.getParameter(\"item\").getKey(),this.sFilterKey){case\"active\":this.aTabFilters.push(new i(\"completed\",s.EQ,!1));break;case\"completed\":this.aTabFilters.push(new i(\"completed\",s.EQ,!0))}this._applyListFilters()},_applyListFilters:function(){var e,t;(this.byId(\"todoList\").getBinding(\"items\").filter(this.aSearchFilters.concat(this.aTabFilters),\"todos\"),this.sFilterKey&&\"all\"!==this.sFilterKey?(e=\"active\"===this.sFilterKey?\"ACTIVE_ITEMS\":\"COMPLETED_ITEMS\",this.sSearchQuery&&(e+=\"_CONTAINING\")):this.sSearchQuery&&(e=\"ITEMS_CONTAINING\"),e)&&(t=this.getView().getModel(\"i18n\").getResourceBundle().getText(e,[this.sSearchQuery]));this.getView().getModel(\"view\").setProperty(\"/filterText\",t)}})});",
	"integrtr/platform/test/integration/AllJourneys.js": "sap.ui.define([\"sap/ui/test/Opa5\",\"sap/ui/demo/todo/test/integration/arrangements/Startup\",\"sap/ui/demo/todo/test/integration/TodoListJourney\",\"sap/ui/demo/todo/test/integration/SearchJourney\",\"sap/ui/demo/todo/test/integration/FilterJourney\"],function(t,e){\"use strict\";t.extendConfig({arrangements:new e,pollingInterval:1})});",
	"integrtr/platform/test/integration/FilterJourney.js": "sap.ui.define([\"sap/ui/test/opaQunit\",\"sap/ui/demo/todo/test/integration/pages/App\"],function(e){\"use strict\";QUnit.module(\"Filter\"),e(\"should show correct items when filtering for 'Active' items\",function(e,t,o){e.iStartMyApp(),t.onTheAppPage.iFilterForItems(\"active\"),o.onTheAppPage.iShouldSeeItemCount(1),o.iTeardownMyApp()}),e(\"should show correct items when filtering for 'Completed' items\",function(e,t,o){e.iStartMyApp(),t.onTheAppPage.iFilterForItems(\"completed\"),o.onTheAppPage.iShouldSeeItemCount(1),o.iTeardownMyApp()}),e(\"should show correct items when filtering for 'Completed' items and switch back to 'All'\",function(e,t,o){e.iStartMyApp(),t.onTheAppPage.iFilterForItems(\"completed\"),o.onTheAppPage.iShouldSeeItemCount(1),t.onTheAppPage.iFilterForItems(\"all\"),o.onTheAppPage.iShouldSeeItemCount(2),o.iTeardownMyApp()})});",
	"integrtr/platform/test/integration/SearchJourney.js": "sap.ui.define([\"sap/ui/test/opaQunit\",\"sap/ui/demo/todo/test/integration/pages/App\"],function(e){\"use strict\";QUnit.module(\"Search\"),e(\"should show correct item count after search (1)\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"earn\"),r.onTheAppPage.iShouldSeeItemCount(1),r.iTeardownMyApp()}),e(\"should show correct item count after search (0)\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"there should not be an item for this search\"),r.onTheAppPage.iShouldSeeItemCount(0),r.iTeardownMyApp()}),e(\"should show correct item count after search and clearing the search\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"earn\").and.iEnterTextForSearchAndPressEnter(\"\"),r.onTheAppPage.iShouldSeeItemCount(2),r.iTeardownMyApp()}),e(\"should show correct item count after search and active items filter\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"earn\").and.iFilterForItems(\"active\"),r.onTheAppPage.iShouldSeeItemCount(1),r.iTeardownMyApp()}),e(\"should show correct item count after search and completed items filter\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"earn\").and.iFilterForItems(\"completed\"),r.onTheAppPage.iShouldSeeItemCount(0),r.iTeardownMyApp()}),e(\"should show correct item count after search and all items filter\",function(e,t,r){e.iStartMyApp(),t.onTheAppPage.iEnterTextForSearchAndPressEnter(\"earn\").and.iFilterForItems(\"all\"),r.onTheAppPage.iShouldSeeItemCount(1),r.iTeardownMyApp()})});",
	"integrtr/platform/test/integration/TodoListJourney.js": "sap.ui.define([\"sap/ui/test/opaQunit\",\"sap/ui/demo/todo/test/integration/pages/App\"],function(e){\"use strict\";QUnit.module(\"Todo List\"),e(\"should add an item\",function(e,t,n){e.iStartMyApp(),t.onTheAppPage.iEnterTextForNewItemAndPressEnter(\"my test\"),n.onTheAppPage.iShouldSeeTheItemBeingAdded(3,\"my test\"),n.iTeardownMyApp()}),e(\"should remove a completed item\",function(e,t,n){e.iStartMyApp(),t.onTheAppPage.iEnterTextForNewItemAndPressEnter(\"my test\").and.iSelectAllItems(!0).and.iClearTheCompletedItems().and.iEnterTextForNewItemAndPressEnter(\"my test\"),n.onTheAppPage.iShouldSeeAllButOneItemBeingRemoved(\"my test\"),n.iTeardownMyApp()}),e(\"should select an item\",function(e,t,n){e.iStartMyApp(),t.onTheAppPage.iEnterTextForNewItemAndPressEnter(\"my test\").and.iSelectTheLastItem(!0),n.onTheAppPage.iShouldSeeTheLastItemBeingCompleted(!0),n.iTeardownMyApp()}),e(\"should unselect an item\",function(e,t,n){e.iStartMyApp(),t.onTheAppPage.iEnterTextForNewItemAndPressEnter(\"my test\").and.iSelectAllItems(!0).and.iClearTheCompletedItems().and.iEnterTextForNewItemAndPressEnter(\"my test\").and.iSelectTheLastItem(!0).and.iSelectTheLastItem(!1),n.onTheAppPage.iShouldSeeTheLastItemBeingCompleted(!1),n.iTeardownMyApp()})});",
	"integrtr/platform/test/integration/arrangements/Startup.js": "sap.ui.define([\"sap/ui/test/Opa5\"],function(t){\"use strict\";return t.extend(\"sap.ui.demo.todo.test.integration.arrangements.Startup\",{iStartMyApp:function(){this.iStartMyUIComponent({componentConfig:{name:\"sap.ui.demo.todo\",async:!0,manifest:!0}})}})});",
	"integrtr/platform/test/integration/opaTests.qunit.js": "QUnit.config.autostart=!1,sap.ui.getCore().attachInit(function(){\"use strict\";sap.ui.require([\"sap/ui/demo/todo/test/integration/AllJourneys\"],function(){QUnit.start()})});",
	"integrtr/platform/test/integration/pages/App.js": "sap.ui.require([\"sap/ui/test/Opa5\",\"sap/ui/test/matchers/AggregationLengthEquals\",\"sap/ui/test/matchers/PropertyStrictEquals\",\"sap/ui/test/matchers/Properties\",\"sap/ui/test/actions/EnterText\",\"sap/ui/test/actions/Press\"],function(e,t,s,n,i,r){\"use strict\";var o=\"sap.ui.demo.todo.view.App\";e.createPageObjects({onTheAppPage:{actions:{iEnterTextForNewItemAndPressEnter:function(e){return this.waitFor({id:\"addTodoItemInput\",viewName:o,actions:[new i({text:e})],errorMessage:\"The text cannot be entered\"})},iEnterTextForSearchAndPressEnter:function(e){return this.waitFor({id:\"searchTodoItemsInput\",viewName:o,actions:[new i({text:e})],errorMessage:\"The text cannot be entered\"})},iSelectTheLastItem:function(e){return this.waitFor({id:\"todoList\",viewName:o,actions:[function(t){var s=t.getItems().length,n=t.getItems()[s-1].getContent()[0].getItems()[0];this._triggerCheckboxSelection(n,e)}.bind(this)],errorMessage:\"Last checkbox cannot be pressed\"})},iSelectAllItems:function(e){return this.waitFor({id:\"todoList\",viewName:o,actions:[function(t){t.getItems().forEach(function(t){var s=t.getContent()[0].getItems()[0];this._triggerCheckboxSelection(s,e)}.bind(this))}.bind(this)],errorMessage:\"checkbox cannot be pressed\"})},_triggerCheckboxSelection:function(e,t){if(e.getSelected()&&!t||!e.getSelected()&&t){var s=new r;s.controlAdapters[\"sap.m.CustomListItem\"]=\"selectMulti-CB\",s.executeOn(e)}},iClearTheCompletedItems:function(){return this.waitFor({id:\"clearCompleted\",viewName:o,actions:[new r],errorMessage:\"checkbox cannot be pressed\"})},iFilterForItems:function(e){return this.waitFor({viewName:o,controlType:\"sap.m.SegmentedButtonItem\",matchers:[new n({key:e})],actions:[new r],errorMessage:\"SegmentedButton can not be pressed\"})}},assertions:{iShouldSeeTheItemBeingAdded:function(n,i){return this.waitFor({id:\"todoList\",viewName:o,matchers:[new t({name:\"items\",length:n}),function(e){var t=e.getItems().length,n=e.getItems()[t-1].getContent()[0].getItems()[1].getItems()[0];return new s({name:\"text\",value:i}).isMatching(n)}],success:function(){e.assert.ok(!0,\"The table has \"+n+\" item(s), with '\"+i+\"' as last item\")},errorMessage:\"List does not have expected entry '\"+i+\"'.\"})},iShouldSeeTheLastItemBeingCompleted:function(t){return this.waitFor({id:\"todoList\",viewName:o,matchers:[function(e){var s=e.getItems().length,n=e.getItems()[s-1].getContent()[0].getItems()[0];return t&&n.getSelected()||!t&&!n.getSelected()}],success:function(){e.assert.ok(!0,\"The last item is marked as completed\")},errorMessage:\"The last item is not disabled.\"})},iShouldSeeAllButOneItemBeingRemoved:function(n){return this.waitFor({id:\"todoList\",viewName:o,matchers:[new t({name:\"items\",length:1}),function(e){var t=e.getItems()[0].getContent()[0].getItems()[1].getItems()[0];return new s({name:\"text\",value:n}).isMatching(t)}],success:function(){e.assert.ok(!0,\"The table has 1 item, with '\"+n+\"' as Last item\")},errorMessage:\"List does not have expected entry '\"+n+\"'.\"})},iShouldSeeItemCount:function(s){return this.waitFor({id:\"todoList\",viewName:o,matchers:[new t({name:\"items\",length:s})],success:function(){e.assert.ok(!0,\"The table has \"+s+\" item(s)\")},errorMessage:\"List does not have expected number of items '\"+s+\"'.\"})}}}})});",
	"integrtr/platform/test/testsuite.qunit.js": "window.suite=function(){\"use strict\";var t=new parent.jsUnitTestSuite,n=location.pathname.substring(0,location.pathname.lastIndexOf(\"/\")+1);return t.addTestPage(n+\"unit/unitTests.qunit.html\"),t.addTestPage(n+\"integration/opaTests.qunit.html\"),t};",
	"integrtr/platform/test/unit/AllTests.js": "sap.ui.define([\"./controller/App.controller\"]);",
	"integrtr/platform/test/unit/controller/App.controller.js": "sap.ui.define([\"sap/ui/base/ManagedObject\",\"sap/ui/core/mvc/Controller\",\"sap/ui/demo/todo/controller/App.controller\",\"sap/ui/model/json/JSONModel\"],function(t,e,o,i){\"use strict\";QUnit.module(\"Test model modification\",{beforeEach:function(){this.oAppController=new o,this.oViewStub=new t({}),sinon.stub(e.prototype,\"getView\").returns(this.oViewStub),this.oJSONModelStub=new i({todos:[]}),this.oViewStub.setModel(this.oJSONModelStub)},afterEach:function(){e.prototype.getView.restore(),this.oViewStub.destroy()}}),QUnit.test(\"Should add a todo element to the model\",function(t){t.strictEqual(this.oJSONModelStub.getObject(\"/todos\").length,0,\"There must be no todos defined.\"),this.oJSONModelStub.setProperty(\"/newTodo\",\"new todo item\"),this.oAppController.addTodo(),t.strictEqual(this.oJSONModelStub.getObject(\"/todos\").length,1,\"There is one new item.\")}),QUnit.test(\"Should toggle the completed items in the model\",function(t){this.oJSONModelStub.setData({todos:[{title:\"Start this app\",completed:!1}],itemsLeftCount:1}),t.strictEqual(this.oJSONModelStub.getObject(\"/todos\").length,1,\"There is one item.\"),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),1,\"There is one item left.\"),this.oJSONModelStub.setProperty(\"/todos/0/completed\",!0),this.oAppController.updateItemsLeftCount(),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),0,\"There is no item left.\")}),QUnit.test(\"Should clear the completed items\",function(t){this.oJSONModelStub.setData({todos:[{title:\"Start this app1\",completed:!1},{title:\"Start this app2\",completed:!0}],itemsLeftCount:1}),t.strictEqual(this.oJSONModelStub.getObject(\"/todos\").length,2,\"There are two items.\"),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),1,\"There is no item left.\"),this.oAppController.clearCompleted(),this.oAppController.updateItemsLeftCount(),t.strictEqual(this.oJSONModelStub.getObject(\"/todos\").length,1,\"There is one item left.\"),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),1,\"There is one item left.\")}),QUnit.test(\"Should update items left count when no todos are loaded, yet\",function(t){this.oJSONModelStub.setData({}),t.strictEqual(this.oJSONModelStub.getObject(\"/todos\"),void 0,\"There are no items.\"),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),void 0,\"Items left is not set\"),this.oAppController.updateItemsLeftCount(),t.strictEqual(this.oJSONModelStub.getProperty(\"/itemsLeftCount\"),0,\"There is no item left.\")})});",
	"integrtr/platform/test/unit/unitTests.qunit.js": "QUnit.config.autostart=!1,sap.ui.getCore().attachInit(function(){\"use strict\";sap.ui.require([\"sap/ui/demo/todo/test/unit/AllTests\"],function(){QUnit.start()})});",
	"integrtr/platform/view/App.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:f=\"sap.f\" controllerName=\"sap.ui.demo.todo.controller.App\" displayBlock=\"true\"><App><Page><customHeader><f:ShellBar title=\"{i18n>TITLE}\" homeIcon=\"./img/logo_ui5.png\" /></customHeader><content><f:DynamicPage><f:header><f:DynamicPageHeader pinnable=\"false\"><Input class=\"todoInput\" id=\"addTodoItemInput\" value=\"{/newTodo}\" placeholder=\"{i18n>INPUT_PLACEHOLDER}\" change=\".addTodo\" /></f:DynamicPageHeader></f:header><f:content><List id=\"todoList\"\r\n\t\t\t\t\t\t\t\titems=\"{ path: '/todos', events: { change: '.updateItemsLeftCount' } }\"\r\n\t\t\t\t\t\t\t\tmode=\"None\"\r\n\t\t\t\t\t\t\t\tgrowing=\"true\"\r\n\t\t\t\t\t\t\t\tgrowingScrollToLoad=\"true\"\r\n\t\t\t\t\t\t\t\tshowNoData=\"false\"\r\n\t\t\t\t\t\t\t\tshowSeparators=\"None\"><headerToolbar><OverflowToolbar class=\"sapUiSizeCompact\" visible=\"{= !${view>/isMobile} }\"><ToolbarSpacer /><SearchField id=\"searchTodoItemsInput\" liveChange=\".onSearch\" width=\"20rem\"/><SegmentedButton selectedKey=\"all\" selectionChange=\".onFilter\" class=\"sapMSegmentedButtonNoAutoWidth\"><items><SegmentedButtonItem text=\"{i18n>LABEL_ALL}\" key=\"all\"/><SegmentedButtonItem text=\"{i18n>LABEL_ACTIVE}\" key=\"active\"/><SegmentedButtonItem text=\"{i18n>LABEL_COMPLETED}\" key=\"completed\"/></items></SegmentedButton><Button id=\"clearCompleted\" enabled=\"{/itemsRemovable}\" icon=\"sap-icon://delete\" text=\"{i18n>CLEAR_COMPLETED}\" press=\".clearCompleted\"/></OverflowToolbar></headerToolbar><infoToolbar><OverflowToolbar\r\n\t\t\t\t\t\t\t\t\t\tvisible=\"{= !!${view>/filterText} }\"\r\n\t\t\t\t\t\t\t\t\t\tactive=\"false\"><Label text=\"{view>/filterText}\" /></OverflowToolbar></infoToolbar><CustomListItem><HBox><CheckBox selected=\"{completed}\"  /><VBox justifyContent=\"Center\"><Text text=\"{title}\"/></VBox></HBox><customData><core:CustomData key=\"todo-item-completed\" value=\"{= String(${completed})}\" writeToDom=\"true\" /></customData></CustomListItem></List></f:content></f:DynamicPage></content><footer><OverflowToolbar visible=\"{= !!${view>/isMobile} }\"><SegmentedButton selectedKey=\"all\" selectionChange=\".onFilter\" class=\"sapMSegmentedButtonNoAutoWidth\"><items><SegmentedButtonItem text=\"All\" key=\"all\"/><SegmentedButtonItem text=\"Active\" key=\"active\"/><SegmentedButtonItem text=\"Completed\" key=\"completed\"/></items></SegmentedButton><ToolbarSpacer /><Button id=\"clearCompleted-footer\" enabled=\"{/itemsRemovable}\" icon=\"sap-icon://delete\" text=\"{i18n>CLEAR_COMPLETED}\" press=\".clearCompleted\"/></OverflowToolbar></footer></Page></App></mvc:View>\r\n",
	"integrtr/platform/i18n/i18n.properties": "TITLE=todos\r\nINPUT_PLACEHOLDER=What needs to be done?\r\nCLEAR_COMPLETED=Clear completed\r\nACTIVE_ITEMS=Active items\r\nACTIVE_ITEMS_CONTAINING=Active items containing \"{0}\"\r\nCOMPLETED_ITEMS=Completed items\r\nCOMPLETED_ITEMS_CONTAINING=Completed items containing \"{0}\"\r\nITEMS_CONTAINING=Items containing \"{0}\"\r\nLABEL_ALL=All\r\nLABEL_ACTIVE=Active\r\nLABEL_COMPLETED=Completed",
	"integrtr/platform/i18n/i18n_de.properties": "TITLE=Todos\r\nINPUT_PLACEHOLDER=Was muss getan werden?\r\nCLEAR_COMPLETED=Erledigte Einträge entfernen\r\nACTIVE_ITEMS=Aktive Einträge\r\nACTIVE_ITEMS_CONTAINING=Aktive Einträge mit \"{0}\"\r\nCOMPLETED_ITEMS=Erledigte Einträge\r\nCOMPLETED_ITEMS_CONTAINING=Erledigte Einträge mit \"{0}\"\r\nITEMS_CONTAINING=Einträge mit \"{0}\"\r\nLABEL_ALL=Alle\r\nLABEL_ACTIVE=Aktiv\r\nLABEL_COMPLETED=Erledigt\r\n",
	"integrtr/platform/i18n/i18n_en.properties": "TITLE=todos\r\nINPUT_PLACEHOLDER=What needs to be done?\r\nCLEAR_COMPLETED=Clear completed\r\nACTIVE_ITEMS=Active items\r\nACTIVE_ITEMS_CONTAINING=Active items containing \"{0}\"\r\nCOMPLETED_ITEMS=Completed items\r\nCOMPLETED_ITEMS_CONTAINING=Completed items containing \"{0}\"\r\nITEMS_CONTAINING=Items containing \"{0}\"\r\nLABEL_ALL=All\r\nLABEL_ACTIVE=Active\r\nLABEL_COMPLETED=Completed"
}, "integrtr/platform/Component-preload");